sylius_frontend_product_review_index:
    path: /
    methods: [GET]
    defaults:
        _controller: sylius.controller.product_review:indexAction
        _sylius:
            template: 'frontend/product_review/index.html.twig'
            grid: sylius_frontend_product_review

sylius_frontend_product_review_create:
    path: /new
    methods: [GET, POST]
    defaults:
        _controller: sylius.controller.product_review:createAction
        _sylius:
            template: 'frontend/product_review/create.html.twig'
            form:
                options:
                    validation_groups: ['sylius', 'sylius_review']
            factory:
                method: createForSubjectWithReviewer
                arguments:
                    - "expr:notFoundOnNull(service('sylius.repository.product').findOneById($productId))"
                    - "expr:service('sylius.context.customer').getCustomer()"
            redirect:
                route: sylius_frontend_product_show
                parameters: { slug: resource.reviewSubject.slug }
            
sylius_frontend_product_review_update:
    path: /{id}/update
    methods: [GET, PUT]
    defaults:
        _controller: sylius.controller.product_review:updateAction
        _sylius:
            template: 'frontend/product_review/update.html.twig'
            repository:
                method: findOneBy
                arguments: [{id: $id, author: expr:service('app.context.customer').getCustomer()}]
            redirect:
                route: sylius_frontend_product_show
                parameters: { slug: resource.reviewSubject.slug }
    options:
        expose: true

sylius_frontend_product_rating_create:
    path: /rating/new
    methods: [GET, POST]
    defaults:
        _format: json
        _controller: sylius.controller.product_review:createAction
        _sylius:
            template: 'frontend/product_review/rating/_form.html.twig'
            form: sylius_product_review_rating
            factory:
                method: createForSubjectWithReviewer
                arguments:
                    - "expr:notFoundOnNull(service('sylius.repository.product').findOneById($productId))"
                    - "expr:service('sylius.context.customer').getCustomer()"
    options:
        expose: true

sylius_frontend_product_rating_update:
    path: /rating/edit
    methods: [GET, PUT, PATCH]
    defaults:
        _controller: sylius.controller.product_review:updateAction
        _format: json
        _sylius:
            template: 'frontend/product_review/rating/_form.html.twig'
            form: sylius_product_review_rating
            repository:
                method: findOneBy
                arguments: [{reviewSubject: $productId, author: expr:service('app.context.customer').getCustomer()}]
    options:
        expose: true