{% macro updateStateButton(article, transition, icon, color) %}
    {% import 'macros/buttons.html.twig' as buttons %}

    {{ buttons.patch(path('app_backend_article_update_state', {
        'id': article.id,
        'transition': transition
    }), 'label.'~transition, icon, color|default('color')) }}
{% endmacro %}

{% if is_granted('ROLE_WORKFLOW') %}

    {% if(article.status != constant('AppBundle\\Entity\\Article::STATUS_PUBLISHED')) %}
        <div class="alert alert-warning changeStatusContainer" role="alert">
            <span class="fa fa-exclamation-triangle"></span>

            <div class="pull-right control-group">
                {% if state_machine.can('ask_for_review') %}
                    {{ _self.updateStateButton(article, 'ask_for_review', 'book', 'warning') }}
                {% endif %}

                {% if state_machine.can('ask_for_publication') %}
                    {{ _self.updateStateButton(article, 'ask_for_publication', 'ok', 'success') }}
                {% endif %}

                {% if state_machine.can('publish') %}
                    {{ _self.updateStateButton(article, 'publish', 'upload', 'success') }}
                {% endif %}

            </div>
            Cet article est <strong>{{ ('label.' ~ article.status)|trans }}</strong>.
        </div>
    {% endif %}
{% endif %}